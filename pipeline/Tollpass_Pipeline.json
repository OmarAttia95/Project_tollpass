{
	"name": "Tollpass_Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Avro-to-Parquet",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/omar123915@hotmail.com/Avro to Parquet (Delta)",
					"baseParameters": {
						"event_date": {
							"value": "@pipeline().parameters.p_event_date",
							"type": "Expression"
						},
						"output_path": {
							"value": "@pipeline().parameters.p_output_path",
							"type": "Expression"
						},
						"input_path": {
							"value": "@pipeline().parameters.p_input_path",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DF_LoadFraudEvents",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "detlatable1",
						"type": "DataFlowReference",
						"datasetParameters": {
							"deltafraud": {
								"event_date": {
									"value": "@utcNow('yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						}
					},
					"staging": {
						"linkedService": {
							"referenceName": "ls_blob_snowflake_stage",
							"type": "LinkedServiceReference"
						},
						"folderPath": "snowflake-stage/temp/ "
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Copy_To_Snowflake_TollEvents",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Avro-to-Parquet",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "ParquetReadSettings"
						}
					},
					"sink": {
						"type": "SnowflakeV2Sink",
						"importSettings": {
							"type": "SnowflakeImportCopyCommand"
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "ls_blob_snowflake_stage",
							"type": "LinkedServiceReference"
						},
						"path": "snowflake-stage"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"sink": {
									"name": "TRANSACTION_ID",
									"type": "Int64"
								}
							},
							{
								"sink": {
									"name": "VEHICLE_ID",
									"type": "String"
								}
							},
							{
								"sink": {
									"name": "LICENSE_PLATE",
									"type": "String"
								}
							},
							{
								"sink": {
									"name": "FRAUD_DETECTED",
									"type": "Boolean"
								}
							},
							{
								"sink": {
									"name": "FRAUD_TYPE",
									"type": "String"
								}
							},
							{
								"sink": {
									"name": "DETECTED_TIMESTAMP",
									"type": "DateTime"
								}
							},
							{
								"sink": {
									"name": "EVENT_DATE",
									"type": "DateTime"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "Blob_Parquet",
						"type": "DatasetReference",
						"parameters": {
							"event_date": {
								"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_snowflake_stg_fraud_events",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"p_event_date": {
				"type": "string",
				"defaultValue": "@utcNow('yyyy-MM-dd')"
			}
		},
		"annotations": []
	}
}