{
	"name": "detlatable1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet_TollEvents",
						"type": "DatasetReference"
					},
					"name": "deltafraud"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_snowflake_stg_fraud_events",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "fraudonly"
				}
			],
			"scriptLines": [
				"source(output(",
				"          transaction_id as long,",
				"          vehicle_id as string,",
				"          license_plate as string,",
				"          vehicle_type as string,",
				"          toll_booth_id as string,",
				"          entry_point as string,",
				"          exit_point as string,",
				"          timestamp as string,",
				"          payment_method as string,",
				"          toll_amount as double,",
				"          tag_valid as boolean,",
				"          fraud_detected as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['toll-events-processed/event_date=*']) ~> deltafraud",
				"deltafraud filter(fraud_detected == true",
				") ~> fraudonly",
				"fraudonly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          TRANSACTION_ID as decimal(38,0),",
				"          VEHICLE_ID as string,",
				"          LICENSE_PLATE as string,",
				"          FRAUD_DETECTED as boolean,",
				"          FRAUD_TYPE as string,",
				"          DETECTED_TIMESTAMP as timestamp,",
				"          EVENT_DATE as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sink1"
			]
		}
	}
}